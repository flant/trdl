{{- $host := pluck .Values.global.env .Values.host | first | default .Values.host._default  }}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ .Chart.Name }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/configuration-snippet: |
{{- if eq .Values.global.env "production" }}
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
{{- else }}
    nginx.ingress.kubernetes.io/auth-signin: https://$host/dex-authenticator/sign_in
    nginx.ingress.kubernetes.io/auth-url: https://{{ .Chart.Name }}-dex-authenticator.{{ .Chart.Name }}-{{ .Values.global.env }}.svc.cluster.local/dex-authenticator/auth
    nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-User,X-Auth-Request-Email
{{- end }}
spec:
  tls:
  - hosts:
      - {{ $host }}
{{- if eq .Values.global.env "production" }}
      - www.{{ $host }}
{{- end }}
    secretName: tls-{{ $host }}
  rules:
  - host: {{ $host }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ .Chart.Name }}
          servicePort: 80
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ .Chart.Name }}-ru
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/configuration-snippet: |
{{- if eq .Values.global.env "production" }}
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
{{- else }}
    nginx.ingress.kubernetes.io/auth-signin: https://$host/dex-authenticator/sign_in
    nginx.ingress.kubernetes.io/auth-url: https://{{ .Chart.Name }}-ru-dex-authenticator.{{ .Chart.Name }}-{{ .Values.global.env }}.svc.cluster.local/dex-authenticator/auth
    nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-User,X-Auth-Request-Email
{{- end }}
spec:
  tls:
  - hosts:
      - ru.{{ $host }}
    secretName: tls-{{ $host }}
  rules:
  - host: ru.{{ $host }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ .Chart.Name }}
          servicePort: 80
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: {{ .Chart.Name }}
spec:
  secretName: tls-{{ $host }}
  issuerRef:
    kind: ClusterIssuer
{{- if hasPrefix "review" .Values.global.env }}
    name: letsencrypt-staging
{{- else }}
    name: letsencrypt
{{- end }}
  commonName: {{ $host }}
  dnsNames:
  - {{ $host }}
  - www.{{ $host }}
  - ru.{{ $host }}
  acme:
    config:
    - http01:
        ingressClass: nginx
      domains:
      - {{ $host }}
      - ru.{{ $host }}
      - www.{{ $host }}
---
{{- if ne .Values.global.env "production" }}
apiVersion: deckhouse.io/v1alpha1
kind: DexAuthenticator
metadata:
  name: {{ .Chart.Name }}
spec:
  applicationDomain: {{ $host }}
  sendAuthorizationHeader: false
  applicationIngressCertificateSecretName: tls-{{ $host }}
  applicationIngressClassName: "nginx"
  keepUsersLoggedInFor: "720h"
---
apiVersion: deckhouse.io/v1alpha1
kind: DexAuthenticator
metadata:
  name: {{ .Chart.Name }}-ru
spec:
  applicationDomain: ru.{{ $host }}
  sendAuthorizationHeader: false
  applicationIngressCertificateSecretName: tls-{{ $host }}
  applicationIngressClassName: "nginx"
  keepUsersLoggedInFor: "720h"
{{- end }}
